package com.lc.source.s300

import java.lang.StringBuilder
import java.util.*
import java.util.concurrent.ConcurrentLinkedDeque
import java.util.concurrent.ConcurrentLinkedQueue
import kotlin.collections.ArrayList
import kotlin.collections.HashMap
import kotlin.collections.HashSet
import kotlin.math.min

/*
389. Find the Difference
Easy

1056

301

Add to List

Share
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.



Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
Example 3:

Input: s = "a", t = "aa"
Output: "a"
Example 4:

Input: s = "ae", t = "aea"
Output: "a"


Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lower-case English letters.
Accepted
237,052
Submissions
413,535
 */

class S389{
    fun findTheDifference(s: String, t: String): Char {
        var arr = IntArray(26)
        for(i in t.indices) {
            arr[t[i]-'a']++
        }
        for(i in s.indices) {
            arr[s[i]-'a']--
        }
        for(i in 0..25) {
            if(arr[i] == 1) {
                return 'a'+i
            }
        }
        return ' '
    }

    companion object{
        @JvmStatic
        fun main(args: Array<String>) {
        }
    }
}